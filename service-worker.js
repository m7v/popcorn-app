"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/popcorn-app/index.html","9c559b584b1383ce3287326d045cb6d4"],["/popcorn-app/static/css/main.b846e1f7.css","2e52541760c3315dab55edcceeb1d95f"],["/popcorn-app/static/js/0.da2c83ef.chunk.js","1bf388b1e424a5e3ec0ef21d28273349"],["/popcorn-app/static/js/1.b271d3d8.chunk.js","0d121304260fa6da87c0a41f4536d35e"],["/popcorn-app/static/js/2.6aa1a954.chunk.js","88eb20efe140f5a8424c135b5a2efdd4"],["/popcorn-app/static/js/3.de0a0cfd.chunk.js","80ac44058463654fa5a5f7a817563aca"],["/popcorn-app/static/js/main.c491a5d0.js","94a22f8d7ec2b2e6571c13b7100e9b5d"],["/popcorn-app/static/media/default-card.7c96c896.png","7c96c8965188131419fdf7b36db5eee7"],["/popcorn-app/static/media/keyrune.2867fe04.ttf","2867fe048eed9dc5343ed4d99c2d71b8"],["/popcorn-app/static/media/keyrune.2a434c66.eot","2a434c66ff5e146ed49c6d47ad607757"],["/popcorn-app/static/media/keyrune.359ff459.woff2","359ff4599c953b114ec6c05fb62beb52"],["/popcorn-app/static/media/keyrune.63bd1bbb.svg","63bd1bbbee60705ca5e8706c21611f84"],["/popcorn-app/static/media/keyrune.750e1dc4.woff","750e1dc41d4f0cae890b414ed7f4db00"],["/popcorn-app/static/media/mana.12a08476.woff","12a084765994fad4f1212320727ede65"],["/popcorn-app/static/media/mana.33d1f9b5.svg","33d1f9b5d0a2498500eff3c2c8343d21"],["/popcorn-app/static/media/mana.c110dae7.eot","c110dae71f2c1a70250f9808a4f11fe5"],["/popcorn-app/static/media/mana.c6bc932c.ttf","c6bc932cfe42c37d144bbd6d59ef35fc"],["/popcorn-app/static/media/mplantin.7f51b354.svg","7f51b3545752eb40bb4b63661f584d7d"],["/popcorn-app/static/media/mplantin.b09923e4.woff","b09923e4e9b689572c4d30429491b892"],["/popcorn-app/static/media/mplantin.c64fa9e7.ttf","c64fa9e74b60a46076fce0b1a4b631dc"],["/popcorn-app/static/media/mplantin.daf8b76b.eot","daf8b76ba2ad29eac149b6a26a5747d7"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var n=new Request(t,{credentials:"same-origin"});return fetch(n).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,"index.html"),a=urlsToCacheKeys.has(t));!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL("/popcorn-app/index.html",self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});